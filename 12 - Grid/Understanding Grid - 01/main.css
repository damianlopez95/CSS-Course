.container {
    margin: 20px;
    /* we define a container as a grid */
    /* every child of the grid takes one cell */
    display: grid;
    /* define the width of each column and the number of columns */
    /* grid-template-columns: 200px 150px 20%; */
    /* grid-template-columns: repeat('auto-fit', minmax(100px, 150px)); */
    grid-template-columns: repeat(4, 25%);
    /* define the height of each row and the number of rows */
    /* we can name row and columns */
    grid-template-rows: [first-row-start] 3rem [first-row-end second-row-start] 5rem [second-row-end] minmax(1rem, 4rem);
    /* gap: row column */
    gap: 10px 20px;
    /* areas can specify a possible layout with defined items */
    grid-template-areas: "el1 el1 el1 el1"
                         "el2 . el3 ."
                         "el4 el4 el4 el4";
}

.container div {
    padding: 1rem;
}

.el1 {
    background: rgba(255, 154, 72, 0.5);
    /* grid-row-start: first-row-start;
    grid-row-end: second-row-end; */
    /* shorthand: start / end */
    /* grid-row: first-row-start / second-row-end; */
    grid-area: el1;
}

.el2 {
    background: rgba(255, 0, 0, 0.5);
    /* grid-column: 2 / 5; */
    grid-area: el2;
}

.el3 {
    background: rgba(0, 128, 0, 0.5);
    /* we can define the columns and rows an element can take */
    /* grid-column-start: 2; */
    /* fill two spaces from the column defined in start */
    /* grid-column-end: span 2; */
    grid-area: el3;
}

.el4 {
    background: rgba(0, 4, 255, 0.5);
    grid-area: el4;
}
