main {
    padding-top: 2.9rem;
}

/* z-index work ONLY in elements with position DIFFERENT to STATIC */
/* Default value of z-index is 0 */

.background {
    /* Applying background shorthand props */
    /* background-position: center;
    background-size: cover; */
    background: url("../images/plans-background.jpg") center/cover;
    position: fixed;
    -webkit-filter: grayscale(20%);
            filter: grayscale(20%);
    width: 100vw;
    height: 100vh;
    z-index: -1;
}

.package {
    width: 100%;
    margin: 1rem 0;
    border: 4px solid var(--dark-green);
    border-left: none;
    /* z-index by default is 0 */

    /* with a relative position, children elements of this element can reference */
    /* to this through the absolute position, so they're fixed to the closest relative ancestor */

    /* elements with a relative position are relative to themselves, so if they're moved */
    /* then they move (top, right, ..) in relation to it's originnal position */
    position: relative;

    /* Assignment #7 */
    /* Given that the badge now has a z-index of 10, the superior of the page, */
    /* it's parent should have a z-index of 0 so it never appears over the header. */
    /* This way the childrens of the package can't appear over or below other elements */
    z-index: 0;

    /* to only show a part of the badge */
    overflow: hidden;
}

.package:first-of-type {
    margin-top: 3rem;
}

.package:hover {
  -webkit-animation: movePackage 0.4s 1 linear forwards;
          animation: movePackage 0.4s 1 linear forwards;
}

.package:hover,
.package:active {
    -webkit-box-shadow: 2px 2px 4px rgba(0,0,0,0.5);
            box-shadow: 2px 2px 4px rgba(0,0,0,0.5);
    border-color: var(--pink);
    /* border-color: var(--pink) !important; */
}

.package a {
    text-decoration: none;
    color: inherit;
    display: block;
    padding: 2rem;
}

/* absolute position is relative to it's closest ancestor element with a */
/* positioning different to static (without defined position) */

/* so absolute is very similar to fixed, but absolute it's fixed to a relative element */

.package__badge {
    position: absolute;
    margin: 0;
    top: 5px;
    right: 5px;
    font-size: 0.8rem;
    color: var(--white);
    background: var(--dark-green);
    padding: 0.8rem;
    border-radius: 2px;
    width: 12rem;
    text-align: center;
    /* Assignment #6 */
    /* Badge over the header... */
    z-index: 10;

    -webkit-transform: rotate(45deg) translate(3.5rem, -2rem) scale(1.1);

        -ms-transform: rotate(45deg) translate(3.5rem, -2rem) scale(1.1);

            transform: rotate(45deg) translate(3.5rem, -2rem) scale(1.1);
    /* what part of the element is the center of the transformation */
    -webkit-transform-origin: center;
        -ms-transform-origin: center;
            transform-origin: center;
}

.package__subtitle {
    color: var(--mid-gray);
}

.package__info {
    padding: 1rem;
    border: 1px solid var(--dark-green);
    font-size: 1.2rem;
    color: var(--dark-green);
    background: var(--white);
}

.clearfix {
    clear: both;
}

#plus {
    background: rgba(213, 255, 220, 0.95);
}

#free {
    background: rgba(234, 252, 237, 0.95);
    float: right;
    border-right: none;
    border-left: 4px solid var(--dark-green);
    text-align: right;
}

#free:hover,
#free:active {
    border-left-color: var(--pink);
}

#premium {
    background: rgba(14, 79, 31, 0.95);
}

#premium .package__title {
    color: var(--white);
}

#premium .package__subtitle {
    color: var(--green-gray);
}

@media (min-width: 40rem) {
    .package {
        width: 75%;
        max-width: 55rem;
    }
    .package__badge {
        top: 15px;
        right: 15px;
    }
}

@-webkit-keyframes movePackage {
  0% {
    -webkit-transform: translateY(0) scale(1.03);
            transform: translateY(0) scale(1.03);
  }
  50% {
    -webkit-transform: translateY(-1.5rem) scale(1.07);
            transform: translateY(-1.5rem) scale(1.07);
  }
  100% {
    -webkit-transform: translateY(-3rem) scale(1.1);
            transform: translateY(-3rem) scale(1.1);
  }
}

@keyframes movePackage {
  0% {
    -webkit-transform: translateY(0) scale(1.03);
            transform: translateY(0) scale(1.03);
  }
  50% {
    -webkit-transform: translateY(-1.5rem) scale(1.07);
            transform: translateY(-1.5rem) scale(1.07);
  }
  100% {
    -webkit-transform: translateY(-3rem) scale(1.1);
            transform: translateY(-3rem) scale(1.1);
  }
}
